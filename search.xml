<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/1970/01/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>helloworld</title>
    <url>/2022/11/02/helloworld/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>使用HEXO搭建个人博客</title>
    <url>/1970/01/01/hexo%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1>使用HEXO搭建个人博客</h1>
<h2 id="1-安装nodejs、npm和Hexo">1.安装nodejs、npm和Hexo</h2>
<p>略</p>
<h2 id="2-初始化博客">2.初始化博客</h2>
<h3 id="2-1初始化博客系统">2.1初始化博客系统</h3>
<p>随便新建一个文件夹，例如叫<code>_HexoSite</code>。进入<code>_HexoSite</code>,打开命令行输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init &lt;blog_name&gt;</span><br></pre></td></tr></table></figure>
<p>此处<code>&lt;blog_name&gt;</code>是你自己取得名字(随便起)，我这里就叫blog了。这个命令会帮我们实例化一个博客系统，命令执行完之后会生成一个名字叫<code>blog</code>的文件夹，和我们博客网站相关的所有内容都会被保存在这个文件夹里面。</p>
<p>执行过程会使用git clone，因此如果没有使用魔法的话等待时间会久一点。</p>
<p><img src="https://markdown-bed-pixel.oss-cn-shanghai.aliyuncs.com/typora/image-20221102172659401.png" alt="image-20221102172659401"></p>
<h3 id="2-2新建一篇博客">2.2新建一篇博客</h3>
<p>假如这时候我们想要写一篇博客该怎么办呢？只要使用<code>hexo new &lt;articale_name&gt;</code>就可以啦！</p>
<p>:bell:<strong>注意以下命令都需要在<code>_HexoSite/blog</code>目录下打开命令行执行</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd blog</span><br><span class="line">hexo new helloworld</span><br><span class="line">hexo g # g是generate的缩写，等效于hexo generate，即根据我们写的Markdown格式的文章生成html文件</span><br><span class="line">hexo s # s是server的缩写，运行这条命令后，将在本地运行hexo server</span><br></pre></td></tr></table></figure>
<p><img src="https://markdown-bed-pixel.oss-cn-shanghai.aliyuncs.com/typora/image-20221102173734704.png" alt="image-20221102173734704"></p>
<p>这时候我们可以在浏览器打开<code>localhost:4000</code>就能看见我们的博客网站了！</p>
<h3 id="2-3部署到GitHub">2.3部署到GitHub</h3>
<p>现在我们的网站还是只有我们自己能够看到，如果想要让别人看见，就需要将之发布到互联网。GitHub为我们提供了很好的解决方案！</p>
<p>在GitHub中，我们新建一个repository，名字叫<code>username.github.io</code>，这里<code>username</code>就是你自己GitHub的用户名（注意是用户名而非昵称！用户名就是你浏览器地址栏里面的那个名字）</p>
<p>然后进入到<code>_HexoSite/blog/_config.yml</code>中，找到最下面的deploy选项，编辑为如下:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:/username/username.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>
<p>将repo中两处<code>username</code>替换为你自己的用户名</p>
<p>然后我们在<code>_HexoSite/blog</code>处打开命令行，输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>来安装git部署的插件。</p>
<p>安装完成后，执行:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p><code>hexo d</code>等效于<code>hexo deploy</code>，即部署博客系统。</p>
<p><img src="https://markdown-bed-pixel.oss-cn-shanghai.aliyuncs.com/typora/image-20221102175132944.png" alt="image-20221102175132944"></p>
<p>这时候我们的博客系统就成功部署到GitHub了！在浏览器访问<code>username.github.io</code>就能看到你的网站了~</p>
<p><img src="https://markdown-bed-pixel.oss-cn-shanghai.aliyuncs.com/typora/image-20221102175306914.png" alt="image-20221102175306914"></p>
<h3 id="2-4-部署到自己的域名">2.4 部署到自己的域名</h3>
<p>如果你有属于自己的个性域名，那么可以把这个域名连接到你的GitHub io，这样的话就更方便别人访问了！PS:给自己的网站打个广告,我的域名叫<code>pixelchen.top</code></p>
<p>假设你现在已经有了自己的域名，进入到域名控制台（以阿里云为例）:</p>
<p>添加两条解析记录。大家可以就按照我这个来配置，注意&quot;记录值&quot;应该填自己GitHub IO的地址以及对应的IP地址。</p>
<p>IP地址可以通过命令行PING自己GitHub IO的方式得到</p>
<p><img src="https://markdown-bed-pixel.oss-cn-shanghai.aliyuncs.com/typora/image-20221102180019894.png" alt="image-20221102180019894"></p>
<p>然后转到我们的repository界面，点击settings-&gt;page，绑定我们的域名</p>
<p><img src="https://markdown-bed-pixel.oss-cn-shanghai.aliyuncs.com/typora/image-20221102180256217.png" alt="image-20221102180256217"></p>
<p>OK，大功告成！现在可以直接通过域名访问自己的博客网站啦！</p>
<h2 id="3-定制主题">3.定制主题</h2>
<p>默认的主题可能不大好看，我们可以通过自己使用第三方主题的方式来让我们的网站变得更加好看！</p>
<p>这里以<code>butterfly</code>主题为例，讲解自定义主题。</p>
<p>在<code>_HexoSite/blog</code>下打开命令行输入:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>
<p>这会在<code>blogh/themes</code>下保存<code>butterfly</code>这个主题库。</p>
<p>现在还没完，现在只是下载了主题，还没有安装，我们需要找到<code>blog/_config.yml</code>（全局配置文件），把<code>theme</code>从<code>landscape</code>换成<code>butterfly</code></p>
<p>然后我们再次生成(hexo g)、部署(hexo d)，就能看见我们的网页已经换成butterfly的主题啦！</p>
<h2 id="4-可能存在的问题">4.可能存在的问题</h2>
<h3 id="Git-Site-not-found">Git Site not found</h3>
<p><img src="https://markdown-bed-pixel.oss-cn-shanghai.aliyuncs.com/typora/image-20221102212913928.png" alt="image-20221102212913928"></p>
<p>每次部署后访问自己的域名，总会显示404 git page not found，而且一看settings-&gt;page界面域名又消失了，十分的气人，我自己也被烦恼了很久。解决方案: 在博客根目录source下新建文件CNAME（注意没有任何扩展名），在这个文件里面写入你的域名，就可以解决这个问题了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span></span></span></span></p>
]]></content>
      <categories>
        <category>个人网站搭建指北</category>
      </categories>
      <tags>
        <tag>环境配置</tag>
        <tag>网站</tag>
      </tags>
  </entry>
</search>
